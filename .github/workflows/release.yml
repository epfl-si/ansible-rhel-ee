name: Release

on:
  release:
    types:
    - created

permissions:
  packages: write

jobs:
  release:
    name: Release ${{ github.event.release.tag_name }}
    runs-on: ubuntu-20.04
    environment: release

    env:
      TOXENV: ${{ matrix.toxenv }}

    steps:
    - name: Grab the source from Git
      uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install tox
      run: python -m pip install tox --user

    - name: Prepare ${{ matrix.toxenv }} tox testenv
      run: >-
        python -m tox
        --skip-missing-interpreters false
        --notest

    - name: Build image
      env:
        DOCKER_BUILDKIT: 1
      run: >-
        python -m tox
        --skip-missing-interpreters false
        --
        --tag=ghcr.io/${{ github.repository }}:${{ github.sha }}
        --tag=quay.io/${{ github.repository }}:${{ github.sha }}

    - name: Push to GitHub Container Registry
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2.3.1
      with:
        image: ${{ github.repository }}
        tags: >-
          ${{ github.sha }}
          ${{ github.event.release.tag_name }}
          latest
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Log the GHCR upload result
      run: >-
        echo
        'New image has been pushed to
        ${{ steps.push-to-ghcr.outputs.registry-paths }}'

    - name: Push to Quay Container Registry
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2.3.1
      with:
        image: ${{ github.repository }}
        tags: >-
          ${{ github.sha }}
          ${{ github.event.release.tag_name }}
          latest
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
    - name: Log the Quay upload result
      run: >-
        echo
        'New image has been pushed to
        ${{ steps.push-to-quay.outputs.registry-paths }}'
